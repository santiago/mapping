{"ts":1348776141925,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var mongoose = require('mongoose');\n\nvar Schema = mongoose.Schema\n  , ObjectId = Schema.ObjectId;\n\nvar User = new Schema({\n    name          :  { type: String, default: 'hahaha' }\n  , description   :  { type: Number, min: 18, index: true }\n  , bio           :  { type: String, match: /[a-z]/ }\n  , date          :  { type: Date, default: Date.now }\n});\nmongoose.model('User', User);\n\nvar fixUrl= function(url) {\n    console.log(url);\n}\n\nvar Node = new Schema({\n    name\t: { type: String, default: 'Nudo' }\n    , description : { type: String, default: 'Que haces' }\n    , url       : { type: String, default: 'http://', get: fixUrl }\n    , twitter     : { type: String, default: '@', get: fixUrl }\n    , facebook    : { type: String, default: '', get: fixUrl }\n    , tags        : { type: String, default: '' }\n    , members     : { type: [User] }\n    , longitude   : { type: Number }\n    , latitude    : { type: Number }\n    , date        : { type: Date, default: Date.now }\n});\nmongoose.model('Node', Node);\n\n// a setter\nUser.path('name').set(function (v) {\n  return capitalize(v);\n});\n\nmodule.exports= {\n    User: User\n}\n\nvar Mapping= new Schema({\n    visibility: { type: String, enum: ['public', 'private'] },\n    nodes: [Node]\n});"]],"start1":0,"start2":0,"length1":0,"length2":1234}]],"length":1234}
